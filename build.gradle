plugins {
    id "idea"
    id "groovy"
    id "com.energizedwork.webdriver-binaries" version "1.4"
    id "com.energizedwork.idea-base" version "1.4"
    id "org.unbroken-dome.test-sets" version "2.2.1" 
}

ext {
    // The drivers we want to use
    //drivers = ["firefox", "chrome", "chromeHeadless"]
    driver = "chrome"
    ext {
        gebVersion = '3.1'
        seleniumVersion = '3.14.0'
        chromeDriverVersion = '77.0.3865.40'
        geckoDriverVersion = '0.24.0'
        name = "geb-report"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // If using Spock, need to depend on geb-spock
    testCompile "org.gebish:geb-spock:$gebVersion"
    testCompile("org.spockframework:spock-core:1.3-groovy-2.5") {
        exclude group: "org.codehaus.groovy"
    }

    // If using JUnit, need to depend on geb-junit (3 or 4)
    // testCompile "org.gebish:geb-junit4:$gebVersion"

    // Drivers
    testCompile "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    compile module("cglib:cglib-nodep:2.2")
}

webdriverBinaries {
    chromedriver chromeDriverVersion
    geckodriver geckoDriverVersion
}

testSets {
    WebTest
}

task "Test"(type: Test) {
        group JavaBasePlugin.VERIFICATION_GROUP

        outputs.upToDateWhen { false }  // Always run tests

        systemProperty "geb.build.reportsDir", reporting.file("geb/$name")
        systemProperty "geb.env", driver
} 

test {
    dependsOn driver.collect { tasks["Test"] }
    enabled = false
}

tasks.withType(JavaExec) {
    maxHeapSize = "1g"
    jvmArgs '-XX:MaxMetaspaceSize=128m'
    maxParallelForks = 1
    testLogging {
        exceptionFormat = 'full'
        events 'PASSED', 'FAILED', 'STARTED', 'SKIPPED'
    }
    systemProperty 'BROWSER', System.getProperty('BROWSER', 'chrome')
}

tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.memoryMaximumSize = '256m'
}